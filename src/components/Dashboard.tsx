import { useState, useEffect } from 'react';
import { useAuth } from '../contexts/AuthContext';
import BilliardTables from './BilliardTables';
import TableManagement from './TableManagement';
import EmployeeManagement from './EmployeeManagement';
import OrderManagement from './OrderManagement';
import MenuManagement from './MenuManagement';
import RevenueStats from './RevenueStats';
import Settings from './Settings';
import Modal from './Modal';
import { getData, DB_KEYS } from '../services/database';
import { Order } from '../types/order';

const Dashboard = () => {
    const { user, logout, hasRole } = useAuth();
    const [activeTab, setActiveTab] = useState<'service' | 'tables' | 'orders' | 'menu' | 'revenue' | 'employees' | 'settings'>('service');
    const [pendingOrdersCount, setPendingOrdersCount] = useState(0);
    const [showTermsModal, setShowTermsModal] = useState(false);
    const [showAboutModal, setShowAboutModal] = useState(false);

    // ƒê·∫øm ƒë∆°n h√†ng ch∆∞a ho√†n th√†nh
    const loadData = async () => {
        try {
            const orders = await getData<Order[]>(DB_KEYS.ORDERS, []);
            // ƒê·∫øm s·ªë ƒë∆°n h√†ng ch∆∞a ho√†n th√†nh (pending)
            const pendingCount = orders.filter(o => o.status === 'pending').length;
            setPendingOrdersCount(pendingCount);
        } catch (error) {
            // Error loading data
        }
    };

    useEffect(() => {
        // Load d·ªØ li·ªáu l·∫ßn ƒë·∫ßu
        loadData();

        // Reload m·ªói 30 gi√¢y ƒë·ªÉ c·∫≠p nh·∫≠t s·ªë ƒë∆°n h√†ng
        const interval = setInterval(loadData, 30000);

        // L·∫Øng nghe custom event ƒë·ªÉ refresh khi c√≥ action API
        const handleDataChange = () => {
            loadData();
        };

        window.addEventListener('ordersUpdated', handleDataChange);

        return () => {
            clearInterval(interval);
            window.removeEventListener('ordersUpdated', handleDataChange);
        };
    }, []);

    const handleLogout = () => {
        logout();
        // AuthContext s·∫Ω t·ª± ƒë·ªông update v√† App s·∫Ω re-render v·ªõi Login
    };

    const isOwner = hasRole('owner');

    return (
        <div className="min-h-screen bg-gray-50">
            {/* Header */}
            <header className="bg-white shadow-sm">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-3 sm:py-4">
                    <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-3">
                        <button
                            onClick={() => setActiveTab('service')}
                            className="flex items-center gap-3 hover:opacity-80 transition-opacity"
                        >
                            <img src="/logo.svg" alt="BI A Manager Logo" className="w-10 h-10 sm:w-12 sm:h-12" />
                            <h1 className="text-xl sm:text-2xl font-bold text-gray-800">BI A Manager</h1>
                        </button>
                        <div className="flex flex-col sm:flex-row items-start sm:items-center gap-2 sm:gap-4 w-full sm:w-auto">
                            <div className="flex flex-col sm:flex-row items-start sm:items-center gap-2 sm:gap-3">
                                <span className="text-sm sm:text-base text-gray-700">
                                    Xin ch√†o, <strong>{user?.username}</strong>
                                </span>
                                <span className={`px-2 sm:px-3 py-1 rounded-full text-xs font-semibold ${isOwner
                                    ? 'bg-purple-100 text-purple-700'
                                    : 'bg-blue-100 text-blue-700'
                                    }`}>
                                    {isOwner ? 'Ch·ªß c·ª≠a h√†ng' : 'Nh√¢n vi√™n'}
                                </span>
                            </div>
                            <button
                                onClick={handleLogout}
                                className="w-full sm:w-auto px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition text-sm sm:text-base"
                            >
                                ƒêƒÉng xu·∫•t
                            </button>
                        </div>
                    </div>
                </div>
            </header>

            {/* Main Content */}
            <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
                {/* Tabs cho Owner */}
                {isOwner && (
                    <div className="mb-6">
                        <div className="border-b border-gray-200 overflow-x-auto">
                            <nav className="flex -mb-px min-w-max sm:min-w-0">
                                <button
                                    onClick={() => setActiveTab('service')}
                                    className={`px-3 sm:px-6 py-2 sm:py-3 font-medium text-xs sm:text-sm border-b-2 transition whitespace-nowrap ${activeTab === 'service'
                                        ? 'border-indigo-500 text-indigo-600'
                                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                                        }`}
                                >
                                    Ph·ª•c v·ª• B√†n
                                </button>
                                <button
                                    onClick={() => setActiveTab('tables')}
                                    className={`px-3 sm:px-6 py-2 sm:py-3 font-medium text-xs sm:text-sm border-b-2 transition whitespace-nowrap ${activeTab === 'tables'
                                        ? 'border-indigo-500 text-indigo-600'
                                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                                        }`}
                                >
                                    Qu·∫£n l√Ω B√†n
                                </button>
                                <button
                                    onClick={() => setActiveTab('orders')}
                                    className={`px-3 sm:px-6 py-2 sm:py-3 font-medium text-xs sm:text-sm border-b-2 transition relative whitespace-nowrap ${activeTab === 'orders'
                                        ? 'border-indigo-500 text-indigo-600'
                                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                                        }`}
                                >
                                    ƒê∆°n h√†ng
                                    {pendingOrdersCount > 0 && (
                                        <span className="ml-1 sm:ml-2 inline-flex items-center justify-center px-1.5 sm:px-2 py-0.5 sm:py-1 text-xs font-bold leading-none text-white bg-red-600 rounded-full">
                                            {pendingOrdersCount}
                                        </span>
                                    )}
                                </button>
                                <button
                                    onClick={() => setActiveTab('menu')}
                                    className={`px-3 sm:px-6 py-2 sm:py-3 font-medium text-xs sm:text-sm border-b-2 transition whitespace-nowrap ${activeTab === 'menu'
                                        ? 'border-indigo-500 text-indigo-600'
                                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                                        }`}
                                >
                                    Menu
                                </button>
                                <button
                                    onClick={() => setActiveTab('revenue')}
                                    className={`px-3 sm:px-6 py-2 sm:py-3 font-medium text-xs sm:text-sm border-b-2 transition whitespace-nowrap ${activeTab === 'revenue'
                                        ? 'border-indigo-500 text-indigo-600'
                                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                                        }`}
                                >
                                    üìä Doanh thu
                                </button>
                                <button
                                    onClick={() => setActiveTab('employees')}
                                    className={`px-3 sm:px-6 py-2 sm:py-3 font-medium text-xs sm:text-sm border-b-2 transition whitespace-nowrap ${activeTab === 'employees'
                                        ? 'border-indigo-500 text-indigo-600'
                                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                                        }`}
                                >
                                    Nh√¢n vi√™n
                                </button>
                                <button
                                    onClick={() => setActiveTab('settings')}
                                    className={`px-3 sm:px-6 py-2 sm:py-3 font-medium text-xs sm:text-sm border-b-2 transition whitespace-nowrap ${activeTab === 'settings'
                                        ? 'border-indigo-500 text-indigo-600'
                                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                                        }`}
                                >
                                    ‚öôÔ∏è C√†i ƒë·∫∑t
                                </button>
                            </nav>
                        </div>
                    </div>
                )}

                {/* Tabs cho Employee */}
                {!isOwner && (
                    <div className="mb-6">
                        <div className="border-b border-gray-200">
                            <nav className="flex -mb-px">
                                <button
                                    onClick={() => setActiveTab('service')}
                                    className={`flex-1 px-4 sm:px-6 py-2 sm:py-3 font-medium text-xs sm:text-sm border-b-2 transition ${activeTab === 'service'
                                        ? 'border-indigo-500 text-indigo-600'
                                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                                        }`}
                                >
                                    Ph·ª•c v·ª• B√†n
                                </button>
                                <button
                                    onClick={() => setActiveTab('orders')}
                                    className={`flex-1 px-4 sm:px-6 py-2 sm:py-3 font-medium text-xs sm:text-sm border-b-2 transition relative ${activeTab === 'orders'
                                        ? 'border-indigo-500 text-indigo-600'
                                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                                        }`}
                                >
                                    ƒê∆°n h√†ng
                                    {pendingOrdersCount > 0 && (
                                        <span className="ml-1 sm:ml-2 inline-flex items-center justify-center px-1.5 sm:px-2 py-0.5 sm:py-1 text-xs font-bold leading-none text-white bg-red-600 rounded-full">
                                            {pendingOrdersCount}
                                        </span>
                                    )}
                                </button>
                            </nav>
                        </div>
                    </div>
                )}

                {/* Content based on active tab */}
                {isOwner ? (
                    activeTab === 'service' ? (
                        <BilliardTables serviceMode={true} />
                    ) : activeTab === 'tables' ? (
                        <TableManagement />
                    ) : activeTab === 'orders' ? (
                        <OrderManagement />
                    ) : activeTab === 'menu' ? (
                        <MenuManagement />
                    ) : activeTab === 'revenue' ? (
                        <RevenueStats />
                    ) : activeTab === 'settings' ? (
                        <Settings />
                    ) : (
                        <EmployeeManagement />
                    )
                ) : (
                    activeTab === 'service' ? (
                        <BilliardTables serviceMode={true} />
                    ) : (
                        <OrderManagement />
                    )
                )}
            </main>

            {/* Footer */}
            <footer className="bg-white border-t border-gray-200 mt-12">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
                    <div className="flex flex-col sm:flex-row justify-between items-center gap-2 text-xs sm:text-sm text-gray-600">
                        <div className="flex items-center gap-1">
                            <span>¬© {new Date().getFullYear()} BI A Manager. All rights reserved.</span>
                        </div>
                        <div className="flex items-center gap-4">
                            <button
                                onClick={() => setShowTermsModal(true)}
                                className="hover:text-indigo-600 transition-colors underline"
                            >
                                ƒêi·ªÅu kho·∫£n
                            </button>
                            <span className="text-gray-300">|</span>
                            <button
                                onClick={() => setShowAboutModal(true)}
                                className="hover:text-indigo-600 transition-colors underline"
                            >
                                V·ªÅ ch√∫ng t√¥i
                            </button>
                        </div>
                    </div>
                </div>
            </footer>

            {/* Terms Modal */}
            <Modal
                isOpen={showTermsModal}
                onClose={() => setShowTermsModal(false)}
                title="ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng"
                message=""
                type="info"
            >
                <div className="text-left space-y-4 max-h-96 overflow-y-auto px-2">
                    <div>
                        <h3 className="font-semibold text-gray-800 mb-2">1. Ch·∫•p nh·∫≠n ƒëi·ªÅu kho·∫£n</h3>
                        <p className="text-sm text-gray-600 mb-4">
                            B·∫±ng vi·ªác s·ª≠ d·ª•ng h·ªá th·ªëng BI A Manager, b·∫°n ƒë·ªìng √Ω tu√¢n th·ªß c√°c ƒëi·ªÅu kho·∫£n v√† ƒëi·ªÅu ki·ªán s·ª≠ d·ª•ng ƒë∆∞·ª£c n√™u trong t√†i li·ªáu n√†y.
                        </p>
                    </div>
                    <div>
                        <h3 className="font-semibold text-gray-800 mb-2">2. Quy·ªÅn s·ª≠ d·ª•ng</h3>
                        <p className="text-sm text-gray-600 mb-4">
                            B·∫°n ƒë∆∞·ª£c c·∫•p quy·ªÅn s·ª≠ d·ª•ng h·ªá th·ªëng cho m·ª•c ƒë√≠ch qu·∫£n l√Ω qu√°n bi-a c·ªßa m√¨nh. Kh√¥ng ƒë∆∞·ª£c ph√©p sao ch√©p, ph√¢n ph·ªëi ho·∫∑c b√°n h·ªá th·ªëng n√†y cho b√™n th·ª© ba.
                        </p>
                    </div>
                    <div>
                        <h3 className="font-semibold text-gray-800 mb-2">3. B·∫£o m·∫≠t d·ªØ li·ªáu</h3>
                        <p className="text-sm text-gray-600 mb-4">
                            Ch√∫ng t√¥i cam k·∫øt b·∫£o v·ªá th√¥ng tin c·ªßa b·∫°n. T·∫•t c·∫£ d·ªØ li·ªáu ƒë∆∞·ª£c m√£ h√≥a v√† l∆∞u tr·ªØ an to√†n tr√™n server.
                        </p>
                    </div>
                    <div>
                        <h3 className="font-semibold text-gray-800 mb-2">4. Tr√°ch nhi·ªám</h3>
                        <p className="text-sm text-gray-600 mb-4">
                            Ng∆∞·ªùi d√πng ch·ªãu tr√°ch nhi·ªám v·ªÅ t√≠nh ch√≠nh x√°c c·ªßa d·ªØ li·ªáu nh·∫≠p v√†o h·ªá th·ªëng v√† vi·ªác s·ª≠ d·ª•ng h·ªá th·ªëng ƒë√∫ng m·ª•c ƒë√≠ch.
                        </p>
                    </div>
                    <div>
                        <h3 className="font-semibold text-gray-800 mb-2">5. Thay ƒë·ªïi ƒëi·ªÅu kho·∫£n</h3>
                        <p className="text-sm text-gray-600">
                            Ch√∫ng t√¥i c√≥ quy·ªÅn thay ƒë·ªïi c√°c ƒëi·ªÅu kho·∫£n n√†y b·∫•t c·ª© l√∫c n√†o. Vi·ªác ti·∫øp t·ª•c s·ª≠ d·ª•ng h·ªá th·ªëng sau khi c√≥ thay ƒë·ªïi ƒë∆∞·ª£c xem nh∆∞ b·∫°n ƒë√£ ch·∫•p nh·∫≠n c√°c ƒëi·ªÅu kho·∫£n m·ªõi.
                        </p>
                    </div>
                </div>
            </Modal>

            {/* About Modal */}
            <Modal
                isOpen={showAboutModal}
                onClose={() => setShowAboutModal(false)}
                title="V·ªÅ ch√∫ng t√¥i"
                message=""
                type="info"
            >
                <div className="text-left space-y-4 max-h-96 overflow-y-auto px-2">
                    <div>
                        <h3 className="font-semibold text-gray-800 mb-2">BI A Manager</h3>
                        <p className="text-sm text-gray-600 mb-4">
                            H·ªá th·ªëng qu·∫£n l√Ω qu√°n bi-a hi·ªán ƒë·∫°i ƒë∆∞·ª£c ph√°t tri·ªÉn ƒë·ªÉ h·ªó tr·ª£ qu·∫£n l√Ω b√†n bi-a, ƒë∆°n h√†ng, menu, nh√¢n vi√™n v√† theo d√µi doanh thu m·ªôt c√°ch hi·ªáu qu·∫£.
                        </p>
                    </div>
                    <div>
                        <h3 className="font-semibold text-gray-800 mb-2">T√≠nh nƒÉng ch√≠nh</h3>
                        <ul className="text-sm text-gray-600 space-y-2 list-disc list-inside mb-4">
                            <li>Qu·∫£n l√Ω b√†n bi-a v·ªõi nhi·ªÅu tr·∫°ng th√°i</li>
                            <li>T√≠nh gi√° t·ª± ƒë·ªông theo khung gi·ªù</li>
                            <li>Qu·∫£n l√Ω ƒë∆°n h√†ng v√† menu</li>
                            <li>Th·ªëng k√™ doanh thu chi ti·∫øt</li>
                            <li>Thanh to√°n qua QR Code</li>
                            <li>Ph√¢n quy·ªÅn Owner/Employee</li>
                        </ul>
                    </div>
                    <div>
                        <h3 className="font-semibold text-gray-800 mb-2">C√¥ng ngh·ªá</h3>
                        <p className="text-sm text-gray-600 mb-4">
                            ƒê∆∞·ª£c x√¢y d·ª±ng b·∫±ng React + TypeScript, s·ª≠ d·ª•ng Tailwind CSS cho giao di·ªán ƒë·∫πp m·∫Øt v√† responsive tr√™n m·ªçi thi·∫øt b·ªã.
                        </p>
                    </div>
                    <div>
                        <h3 className="font-semibold text-gray-800 mb-2">Phi√™n b·∫£n</h3>
                        <p className="text-sm text-gray-600">
                            Version 1.0.0 - 2025
                        </p>
                    </div>
                </div>
            </Modal>
        </div>
    );
};

export default Dashboard;

